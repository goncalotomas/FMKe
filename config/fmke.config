%% List of IP addresses where FMKe should try to connect at boot time.
%% NOTE: Must use one of the following structures:
%% (1): ["192.168.1.1", "192.168.1.2"]
%% (2): [{192,168,1,1} {192,168,1,2}]
%% (3): "192.168.1.1 192.168.1.2"
%% If you're connecting to multiple nodes on the same port, you can list all of the different addresses here and leave
%% a single entry in the database_ports option (e.g. [8087]).
{database_addresses, ["127.0.0.1"]}.

%% List of ports where FMKe should try to connect at boot time.
%% NOTE: Must use one of the following structures:
%% (1): ["8080", "8081"]
%% (2): [8080, 8081]
%% (3): "8080 8081"
%% If you're connecting to multiple nodes on the same address but on different ports, you can list all of the different
%% ports here and leave a single entry in the database_addresses option (e.g. ["127.0.0.1"]).
{database_ports, [9042]}.

%% Target back end data store. This is required in order for FMKe to load the
%% correct drivers to connect to your desired data store.
%% Currently FMKe supports the following data stores:
%% antidote, riak, redis
%% Please select one of the previous values in the form of an erlang atom
%% (e.g. riak) or string (e.g. "riak")
{target_database, cassandra}.

%% Uses an optimized driver that implements the entire FMKe API (only if implemented).
%% Currently these are available for antidote, riak and redis. You're welcome to implement a new one and submit a
%% pull request!
%% Predictably, this defaults to false, so you only need to specify this option when you want to use an optimized driver
%% implementation.
{optimized_driver, true}.

%% Changes the data model, if the available drivers support it.
%% For key value stores, we consider the possible values to be nested or non_nested, depending on whether the database
%% keeps references to other objects, or copies of other objects that must be updated on each update to the original.
%% The gen_fmke_kv_driver behaviour specifies the start/1 callback for all drivers implemented with this behaviour, and
%% the argument to the start function is the value of this option. We recommend you also implement the gen_server
%% behaviour and keep it in the state, or put it inside an ETS table (but you must check it's value for each relevant
%% get or put operation).
%% When implementing drivers it might make sense to look at how other previous ones were made and attempt to replicate
%% the logic inside them.
%% NOTE: Usually optimized drivers only support one data model (the one that yields the best performance), so please
%% keep this line commented when measuring performance with optimized drivers.
% {data_model, nested}.

%% When FMKe connects to the database you choose it opens a pool of connections.
%% This parameter configures the connection pool size.
%% Please note that in deployments with connections to multiple back end nodes,
%% the number of connections will be equally shared among all nodes
%% Example: connecting FMKe to 2 nodes with a connection pool size of 30 will
%% open 15 connections to each database node.
{connection_pool_size, 30}.

%% The port on which the FMKe HTTP server binds to. Running on a system
%% reserved port (0-1023) will require superuser privileges.
{http_port, 9090}.
